{"version":3,"sources":["redux/actions/contacts.js","components/ContactList.js","components/ContactForm.js","components/AddEditContact.js","components/Contacts.js","components/Logout.js","components/Dashboard.js","components/Header.js","App.js","redux/reducers/contacts.js","redux/store.js","serviceWorker.js","index.js"],"names":["initialStateContacts","contacts","id","firstName","lastName","email","address","phoneNumber","company","getAllContacts","type","addContact","contact","editContact","deleteContact","getSingleContact","window","Swal","DetailsRow","props","className","title","value","connect","state","contactsReducer","dispatch","onPopup","editUser","setContacts","useState","setContact","loading","setLoading","useEffect","setTimeout","length","scope","map","index","substring","onClick","singleUser","filter","singleContact","viewDetails","Object","keys","ContactForm","size","label","pattern","max","setValue","htmlFor","placeholder","onChange","e","target","maxLength","required","isEdit","validate","setValidate","useContacts","user","setUser","handleChange","name","oldUser","prevState","closeRef","useRef","role","ref","data-dismiss","aria-label","aria-hidden","onSubmit","preventDefault","console","log","current","click","handleEditContact","handleSubmit","ContactsContext","createContext","useContext","Contacts","version","setVerion","popupRef","Provider","defaultValue","data-toggle","data-target","tabIndex","data-backdrop","aria-labelledby","addData","newUser","Logout","forwardRef","useImperativeHandle","logoutUser","Dashboard","a","b","status","theme","useMemo","i","parseInt","sum","useCallback","number","backgroundColor","color","padding","logoutRef","useLayoutEffect","style","Header","activeClassName","exact","to","children","App","path","component","require","rootReducer","combineReducers","action","lastId","push","findIndex","getIndex","splice","store","createStore","compose","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","logger","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b5921792.chunk.js","sourcesContent":["export const initialStateContacts = {\r\n  contacts: [\r\n    {\r\n      id: 1,\r\n      firstName: 'Leanne Graham',\r\n      lastName: 'Bret',\r\n      email: 'Sincere@april.biz',\r\n      address: 'Sample',\r\n      phoneNumber: '1231231231',\r\n      company: 'Romaguera-Crona',\r\n    },\r\n    {\r\n      id: 2,\r\n      firstName: 'Leanne Sample',\r\n      lastName: 'Sample',\r\n      email: 'v@gmail.com',\r\n      address: 'Sample',\r\n      phoneNumber: '1231231231',\r\n      company: 'Romaguera-Crona',\r\n    },\r\n  ],\r\n};\r\nexport const getAllContacts = () => {\r\n  return {type: 'GET_ALL_CONTACTS'};\r\n};\r\n\r\nexport const addContact = (contact) => {\r\n  return {type: 'ADD_CONTACT', contact};\r\n};\r\n\r\nexport const editContact = (contact, id) => {\r\n  return {type: 'EDIT_CONTACT', contact, id};\r\n};\r\n\r\nexport const deleteContact = (id) => {\r\n  return {type: 'DELETE_CONTACT', id};\r\n};\r\nexport const getSingleContact = (id) => {\r\n  return {type: 'GET_SINGLE_CONTACT', id};\r\n};\r\n","import React,{useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getAllContacts, getSingleContact, deleteContact} from '../redux/actions/contacts';\r\nimport '../styles/ContactList.css';\r\nconst Swal = window.Swal;\r\nfunction ContactList({getAllContacts, contacts, onPopup, setContacts, editUser, getSingleContact, deleteContact}) {\r\n  const [ contact, setContact ] = useState({});\r\n  const [ loading, setLoading ] = useState(false);\r\n  useEffect(() => {\r\n    getAllContacts();\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n  // useEffect(\r\n  //   () => {\r\n  //     if (Object.keys(props.newUser).length > 0) {\r\n  //       const oldContacts = [ ...contacts ];\r\n  //       console.log(props.newUser.id);\r\n  //       if (oldContacts.filter((contact) => contact.id === props.newUser.id).length === 0) {\r\n  //         let latestId = oldContacts.length + 1;\r\n  //         let user = {...props.newUser, id: latestId};\r\n  //         oldContacts.push(user);\r\n  //         setContacts(oldContacts);\r\n  //         props.setContacts(oldContacts);\r\n  //         Swal.fire('Good job!', 'Contact Added Successfully!', 'success');\r\n  //       }\r\n  //     }\r\n  //   },\r\n  //   [ props.newUser ],\r\n  // );\r\n  const viewDetails = (id) => {\r\n    const oldContacts = [ ...contacts ];\r\n    let singleUser = oldContacts.filter((singleContact) => singleContact.id === id)[0];\r\n    setContact(singleUser);\r\n  };\r\n  const editContact = (id) => {\r\n    const oldContacts = [ ...contacts ];\r\n    let singleUser = oldContacts.filter((singleContact) => singleContact.id === id)[0];\r\n    getSingleContact(id);\r\n    onPopup();\r\n    editUser(singleUser);\r\n  };\r\n  const deleteContacts = (id) => {\r\n    deleteContact(id);\r\n  };\r\n  return (\r\n    <div className=\"row ml-md-4 ml-lg-4 ml-sm-4 pl-md-0\">\r\n      <div className=\"text-center\">{loading && <h1>Loading...</h1>}</div>\r\n      {contacts.length === 0 && <p className=\"text-danger text-center\">No Contacts Found!</p>}\r\n      {contacts.length > 0 && (\r\n        <table className=\"table table-hover col-sm-12 col-md-12 col-lg-6\">\r\n          <thead className=\"border-0\">\r\n            <tr>\r\n              <th scope=\"col\">Basic Info</th>\r\n              <th scope=\"col\">Company</th>\r\n              <th scope=\"col\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact, index) => (\r\n              <tr key={contact.id}>\r\n                <td className=\"d-flex flex-row\">\r\n                  <div>\r\n                    <div className=\"nameImage text-center text-white rounded-circle p5\">\r\n                      {contact.firstName.substring(0, 1)} {contact.lastName.substring(0, 1)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"ml-2\">\r\n                    {contact.firstName} {contact.lastName}\r\n                    <span className=\"small d-block\">{contact.email}</span>\r\n                  </div>\r\n                </td>\r\n                <td>{contact.company}</td>\r\n                <td>\r\n                  <div className=\"d-flex flex-column flex-md-row\">\r\n                    <div className=\"d-flex flex-row\">\r\n                      <i className=\"fa fa-eye action\" title=\"View Contact\" onClick={() => viewDetails(contact.id)} />\r\n                      &nbsp;&nbsp;&nbsp;\r\n                      <i className=\"fa fa-edit action\" title=\"Edit Contact\" onClick={() => editContact(contact.id)} />\r\n                    </div>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <div className=\"d-flex flex-row\">\r\n                      <i\r\n                        className=\"fa fa-trash action\"\r\n                        title=\"Delete Contact\"\r\n                        onClick={() => deleteContacts(contact.id)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n      {Object.keys(contact).length > 0 && (\r\n        <div className=\"col-sm-12 col-md-12 col-lg-6 pr-0 pl-2\">\r\n          <div className=\"ml-lg-5 col-md-12 bg-lightgray\">\r\n            <div className=\"d-flex flex-column align-items-center pt-4 pb-5\">\r\n              <div className=\"nameImage nameImageBig text-center text-white rounded-circle p5\">\r\n                {contact.firstName.substring(0, 1)} {contact.lastName.substring(0, 1)}\r\n              </div>\r\n              <h3>\r\n                {contact.firstName} {contact.lastName}\r\n              </h3>\r\n              <span>{contact.company}</span>\r\n            </div>\r\n            <DetailsRow title={'Full Name'} value={contact.firstName + ' ' + contact.lastName} />\r\n            <DetailsRow title={'Email'} value={contact.email} />\r\n            <DetailsRow title={'Phone'} value={contact.phoneNumber} />\r\n            <DetailsRow title={'Company'} value={contact.company} />\r\n            <DetailsRow title={'Address'} value={contact.address} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst DetailsRow = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex flex-row pb-3\">\r\n        <span className=\"col-md-4 text-lightgray\">{props.title}:</span>\r\n        <span className=\"col-lg-offset-2 col-md-6\">{props.value}</span>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contactsReducer.contacts,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllContacts: () => dispatch(getAllContacts()),\r\n    getSingleContact: (id) => dispatch(getSingleContact(id)),\r\n    deleteContact: (id) => dispatch(deleteContact(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nexport const ContactForm = ({ size, label, index, type, value, pattern, max, setValue }) => {\r\n\treturn (\r\n\t\t<div className={\"col-md-\" + size + \" mb-3\"}>\r\n\t\t\t<label htmlFor={\"validationCustom0\" + index}>{label}</label>\r\n\t\t\t{type !== \"textarea\" && (\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tid={\"validationCustom0\" + index}\r\n\t\t\t\t\tplaceholder={\"Enter \" + label}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(e) => setValue(e.target.value)}\r\n\t\t\t\t\tpattern={pattern}\r\n\t\t\t\t\tmaxLength={max}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{type === \"textarea\" && (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tid={\"validationCustom0\" + index}\r\n\t\t\t\t\tplaceholder={\"Enter \" + label}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(e) => setValue(e.target.value)}\r\n\t\t\t\t\tpattern={pattern}\r\n\t\t\t\t\tmaxLength={max}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<div className=\"invalid-feedback\">Please Enter Valid {label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, {useRef, useState, useEffect} from 'react';\r\nimport {ContactForm} from './ContactForm';\r\nimport {useContacts} from './Contacts';\r\nimport {connect} from 'react-redux';\r\nimport {addContact, editContact} from '../redux/actions/contacts';\r\nfunction AddEditContact(props) {\r\n  const [ validate, setValidate ] = useState(false);\r\n  const values = useContacts();\r\n  const [ user, setUser ] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    company: '',\r\n    address: '',\r\n  });\r\n  const handleChange = (name, value) => {\r\n    let oldUser = {...user};\r\n    oldUser[name] = value;\r\n    setUser((prevState) => {\r\n      return {...prevState, ...oldUser};\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addContact(user);\r\n    setUser({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '',\r\n      company: '',\r\n      address: '',\r\n    });\r\n    setValidate(false);\r\n    closeRef.current.click();\r\n  };\r\n  const handleEditContact = (e) => {\r\n    e.preventDefault();\r\n    console.log(user);\r\n    props.editContact(user, user.id);\r\n    setUser({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '',\r\n      company: '',\r\n      address: '',\r\n    });\r\n    setValidate(false);\r\n    closeRef.current.click();\r\n  };\r\n  const closeRef = useRef();\r\n  useEffect(\r\n    () => {\r\n      if (props.contact && Object.keys(props.contact).length > 0) {\r\n        setUser(props.contact);\r\n      }\r\n    },\r\n    [ props.editUser ],\r\n  );\r\n  return (\r\n    <div className=\"modal-dialog\" role=\"document\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n            Add/Edit Contact\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            ref={closeRef}\r\n            className=\"close\"\r\n            id=\"closemodal\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <form\r\n            className={validate ? 'needs-validation was-validated' : 'needs-validation'}\r\n            onSubmit={(e) => (user.id ? handleEditContact(e) : handleSubmit(e))}>\r\n            <div className=\"form-row\">\r\n              <ContactForm\r\n                type=\"text\"\r\n                label=\"First Name\"\r\n                size={6}\r\n                index=\"1\"\r\n                pattern=\"^[a-zA-Z]*\"\r\n                max=\"20\"\r\n                value={user.firstName}\r\n                setValue={(value) => handleChange('firstName', value)}\r\n              />\r\n              <ContactForm\r\n                type=\"text\"\r\n                label=\"Last Name\"\r\n                size={6}\r\n                index=\"2\"\r\n                pattern=\"^[a-zA-Z]*\"\r\n                max=\"20\"\r\n                value={user.lastName}\r\n                setValue={(value) => handleChange('lastName', value)}\r\n              />\r\n              <ContactForm\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                size={6}\r\n                index=\"3\"\r\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\"\r\n                max=\"50\"\r\n                value={user.email}\r\n                setValue={(value) => handleChange('email', value)}\r\n              />\r\n              <ContactForm\r\n                type=\"text\"\r\n                label=\"Phone Number\"\r\n                size={6}\r\n                index=\"4\"\r\n                pattern=\"^[0-9]{10}$\"\r\n                max=\"10\"\r\n                value={user.phoneNumber}\r\n                setValue={(value) => handleChange('phoneNumber', value)}\r\n              />\r\n              <ContactForm\r\n                type=\"text\"\r\n                label=\"Company Name\"\r\n                size={12}\r\n                index=\"5\"\r\n                pattern=\"^[a-zA-Z]{1}[a-zA-Z., ]*\"\r\n                max=\"30\"\r\n                value={user.company}\r\n                setValue={(value) => handleChange('company', value)}\r\n              />\r\n              <ContactForm\r\n                type=\"textarea\"\r\n                label=\"Address\"\r\n                size={12}\r\n                index=\"6\"\r\n                pattern=\"^[a-zA-Z]{1}[a-zA-Z., ]*\"\r\n                max=\"50\"\r\n                value={user.address}\r\n                setValue={(value) => handleChange('address', value)}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button className=\"btn btn-primary\" onClick={() => setValidate(true)} type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contactsReducer.contacts,\r\n    contact: state.contactsReducer.contact,\r\n    isEdit: state.contactsReducer.isEdit,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addContact: (contact) => dispatch(addContact(contact)),\r\n    editContact: (contact, id) => dispatch(editContact(contact, id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEditContact);\r\n","import React from 'react';\r\nimport ContactList from './ContactList';\r\nimport '../styles/Contacts.css';\r\nimport AddEditContact from './AddEditContact';\r\nimport {createContext, useContext, useRef, useState} from 'react';\r\nconst ContactsContext = createContext();\r\n\r\nexport const useContacts = () => {\r\n  return useContext(ContactsContext);\r\n};\r\nexport default function Contacts() {\r\n  const [ user, setUser ] = useState({});\r\n  const [ contacts, setContacts ] = useState([]);\r\n  const [ version, setVerion ] = useState(1);\r\n  const popupRef = useRef();\r\n  return (\r\n    <div className=\"container pl-lg-3 pl-xs-0 ml-lg-4 ml-xs-1\">\r\n      <ContactsContext.Provider value={{contacts, setContacts}}>\r\n        <div className=\"d-flex flex-row mt-3 justify-content-start align-items-center\">\r\n          <i className=\"fa fa-address-book-o idcard text-white\" />\r\n          <h1 className=\"d-flex flex-column pl-3\">Contacts Application</h1>\r\n          <p>{version}</p>\r\n        </div>\r\n        <div className=\"row ml-md-4 mt-4 mb-4 pl-1 pr-1\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search contacts\"\r\n            defaultValue=\"\"\r\n            className=\"col-sm-6 col-md-6 col-lg-3 search-contacts border\"\r\n          />\r\n          &nbsp;&nbsp;&nbsp;\r\n          <button\r\n            className=\"col-sm-4 col-md-4 col-lg-2 add-contact border-0 text-white\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModalCenter\"\r\n            ref={popupRef}\r\n          onClick={()=>setVerion(version+1)}>\r\n            + Add Contact\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"exampleModalCenter\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          data-backdrop=\"static\"\r\n          aria-labelledby=\"staticBackdropLabel\"\r\n          aria-hidden=\"true\">\r\n          {/* Add/Edit Contact Popup */}\r\n          <AddEditContact\r\n            addData={(user) => setUser(user)}\r\n            editUser={user}\r\n            setContacts={(contacts) => setContacts(contacts)}\r\n          />\r\n        </div>\r\n\r\n        {/* Contacts list */}\r\n        <ContactList\r\n          newUser={user}\r\n          editUser={(user) => setUser(user)}\r\n          onPopup={() => popupRef.current.click()}\r\n          setContacts={(contacts) => setContacts(contacts)}\r\n        />\r\n      </ContactsContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n","import React, { forwardRef, useImperativeHandle } from \"react\";\r\n\r\nexport const Logout = forwardRef((props, ref) => {\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\tlogoutUser: () => {\r\n\t\t\tconsole.log(\"User Loggedout successfully\");\r\n\t\t},\r\n\t}));\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button {...props}>Logout</button>\r\n\t\t</div>\r\n\t);\r\n});\r\n","import React, { useMemo, useState, useEffect, useCallback, useRef, useLayoutEffect } from \"react\";\r\nimport { Logout } from \"./Logout\";\r\n\r\nfunction sum(a, b) {\r\n\tfor (let i = 0; i < 1000000000; i++) {\r\n\t\t// do something\r\n\t}\r\n\treturn parseInt(a) + parseInt(b);\r\n}\r\nexport default function Dashboard() {\r\n\tconst [ a, setA ] = useState(10);\r\n\tconst [ b, setB ] = useState(10);\r\n\tconst [ username, setUsername ] = useState(\"\");\r\n\tconst [ status, setStatus ] = useState(false);\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\tconst [ totalSum, setSum ] = useState(0);\r\n\t// const sumOfTwo = sum(a, b);\r\n\tconst sumOfTwo2 = useMemo(\r\n\t\t() => {\r\n\t\t\treturn sum(a, b);\r\n\t\t},\r\n\t\t[ a, b ],\r\n\t);\r\n\tconst sumOfTwo3 = useCallback(\r\n\t\t(number) => {\r\n\t\t\treturn parseInt(a) + parseInt(number);\r\n\t\t},\r\n\t\t[ a ],\r\n\t);\r\n\t// const theme = {\r\n\t// \tbackgroundColor: status ? \"black\" : \"white\",\r\n\t// \tcolor: status ? \"white\" : \"black\",\r\n\t// \tpadding: 20,\r\n\t// };\r\n\tconst theme = useMemo(\r\n\t\t() => {\r\n\t\t\treturn {\r\n\t\t\t\tbackgroundColor: status ? \"black\" : \"white\",\r\n\t\t\t\tcolor: status ? \"white\" : \"black\",\r\n\t\t\t\tpadding: 20,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ status ],\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t// console.log(\"Updating theme\");\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}, 3000);\r\n\t\t},\r\n\t\t[ theme ],\r\n\t);\r\n\r\n\tconst logoutRef = useRef();\r\n\tconst handleClick = () => {\r\n\t\tlogoutRef.current.logoutUser();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(\"Effect1\");\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\t// console.log(\"Effect2\");\r\n\t}, []);\r\n\tuseLayoutEffect(() => {\r\n\t\t// console.log(\"Layout effect\");\r\n\t\tsetLoading(true);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div style={theme}>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Loading...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Dashboard</h1>\r\n\t\t\t\t\t<Logout onClick={handleClick} ref={logoutRef} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{/* <input type=\"number\" value={a} onChange={(e) => setA(e.target.value)} /> */}\r\n\t\t\t{/* <h3>Sum: {sumOfTwo2}</h3> */}\r\n\t\t\t{/* <h3>Sum: {totalSum}</h3>\r\n\t\t\t<input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n\t\t\t<br />\r\n\t\t\t<button onClick={() => setStatus(!status)}>Update Theme</button>\r\n\t\t\t<br />\r\n\t\t\t<button onClick={() => setSum(sumOfTwo3(10))}>Sum</button> */}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../styles/Header.css\";\r\nexport default function Header(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"d-flex flex-row\">\r\n\t\t\t\t<nav className={\"sidebar d-none d-sm-none d-md-block\"}>\r\n\t\t\t\t\t<div className=\"sticky-top h100\">\r\n\t\t\t\t\t\t<ul className=\"nav flex-column\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item mt-3\">\r\n\t\t\t\t\t\t\t\t<div className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-bars text-white\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-home\" />\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/contacts\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-user\" />\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/settings\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-gear\" />\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch } from \"react-router\";\r\nimport \"./App.css\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <Switch>\r\n          <Route path=\"/contacts\" component={Contacts} />\r\n          <Route path=\"/settings\">\r\n            <h1 className=\"ml-5 mt-3\">Settings</h1>\r\n          </Route>\r\n          <Route path=\"/\" exact component={Dashboard} />\r\n          <Route path=\"*\">\r\n            <div className=\"ml-5 mt-3\">\r\n              <h1>404 Not Found!</h1>\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const {initialStateContacts} = require('../actions/contacts');\r\n\r\nexport const contactsReducer = (state = initialStateContacts, action) => {\r\n  switch (action.type) {\r\n    case 'GET_ALL_CONTACTS':\r\n      return {...state};\r\n    case 'ADD_CONTACT': {\r\n      let contacts = [ ...state.contacts ];\r\n      let lastId =\r\n        contacts.length > 0 && contacts[contacts.length - 1].id ? parseInt(contacts[contacts.length - 1].id) + 1 : 1;\r\n      let contact = action.contact;\r\n      contact.id = lastId;\r\n      contacts.push(contact);\r\n      return {...state, contacts};\r\n    }\r\n    case 'GET_SINGLE_CONTACT': {\r\n      let contacts = [ ...state.contacts ];\r\n      return {...state, contact: contacts.filter((contact) => contact.id === action.id)[0], isEdit: true};\r\n    }\r\n    case 'EDIT_CONTACT': {\r\n      let contacts = [ ...state.contacts ];\r\n      const findIndex = contacts.findIndex((contact) => contact.id === action.id);\r\n      contacts[findIndex] = action.contact;\r\n      return {...state, contacts};\r\n    }\r\n    case 'DELETE_CONTACT': {\r\n      let contacts = [ ...state.contacts ];\r\n      let getIndex = contacts.findIndex((singleContact) => singleContact.id === action.id);\r\n      contacts.splice(getIndex, 1);\r\n      return {...state, contacts};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport {contactsReducer} from './reducers/contacts';\r\n\r\nconst rootReducer = combineReducers({contactsReducer});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(logger, thunk)),\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\"No internet connection found. App is running in offline mode.\");\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter as Router} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './redux/store';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.register();"],"sourceRoot":""}